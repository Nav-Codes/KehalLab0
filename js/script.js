// Box class idea given by ChatGPT
class Box {
    #boxElement = document.createElement("button")
    constructor(num) {
        this.#boxElement.classList.add("box")
        this.#boxElement.style.backgroundColor = this.getRandomColor()
        this.#boxElement.disabled = true;
        
        let btnText = document.createElement("p")
        btnText.style.color = "black"
        btnText.innerHTML = num
        this.#boxElement.insertAdjacentElement("beforeend", btnText)
    }

    getRandomColor() {
        return "#" + Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0');
    }

    getBoxElement() {
        return this.#boxElement
    }

    //generated by ChatGPT and slightly modified
    moveToRandPosition() {
        // Get viewport dimensions
        const viewportWidth = window.innerWidth;
        const viewportHeight = window.innerHeight;

        // Generate random positions
        const randomLeft = Math.random() * (viewportWidth - this.#boxElement.offsetWidth);
        const randomTop = Math.random() * (viewportHeight - this.#boxElement.offsetHeight);

        // Apply new position
        this.#boxElement.style.left = randomLeft + "px";
        this.#boxElement.style.top = randomTop + "px";
    }
}

// BoxManager class idea given by ChatGPT
class BoxManager {
    #boxArr = []

    checkNumOfBoxes() {
        let numBoxes = document.getElementById("numOfBoxes").value
        if (numBoxes > maxBoxes || numBoxes < minBoxes || numBoxes == null) {
            document.getElementById("errorMessage").innerHTML = invalidNumBoxesMsg
        } else {
            document.getElementById("memoryGame").innerHTML = ""
            this.generateBoxes(numBoxes)
        }
    }

    generateBoxes(numBoxes) {
        let gameArea = document.createElement("div")
        gameArea.id = "gameArea"
        document.getElementById("memoryGame").insertAdjacentElement("beforeend", gameArea)
        for (let i = 1; i <= numBoxes; i++) {
            this.#boxArr.push(new Box(i))
            document.getElementById("gameArea").insertAdjacentElement("beforeend", this.#boxArr.at(i - 1).getBoxElement())
        }
    }

    //Generated by ChatGPT
    sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
    
    async shuffleBoxes() {
        //wait numBoxes seconds
        await this.sleep(this.#boxArr.length * 1000 - 2000)

        //shuffle
        for (let i = 0; i < this.#boxArr.length; i++) {
            await this.sleep(2000)
            for (let i = 0; i < this.#boxArr.length; i++) {
                this.#boxArr.at(i).getBoxElement().innerHTML = ""
                this.#boxArr.at(i).getBoxElement().style.position = "absolute"
                this.#boxArr.at(i).moveToRandPosition()
            }
        }

        for (let i = 0; i < this.#boxArr.length; i++) {
            this.#boxArr.at(i).getBoxElement().disabled = false
        }

    }
}

// MemoryGame class idea given by ChatGPT
class MemoryGame {
    #boxManager = new BoxManager()
    initializeGame() {
        this.createStartingElements()
        // console.log(initialMsg)
        document.getElementById("initialMessage").innerHTML = initialMsg
        document.getElementById("goButton").addEventListener("click", () => {
            this.#boxManager.checkNumOfBoxes()
            this.#boxManager.shuffleBoxes()
        })
    }
    createStartingElements() {
        let initialMsg = document.createElement("p")
        initialMsg.id = "initialMessage"

        let numInput = document.createElement("input")
        numInput.type = "number"
        numInput.id = "numOfBoxes"

        let goBtn = document.createElement("button")
        goBtn.id = "goButton"
        goBtn.innerHTML = "Go!"

        let errorMsg = document.createElement("div")
        errorMsg.id = "errorMessage"

        document.getElementById("memoryGame").insertAdjacentElement("beforeend", initialMsg)
        document.getElementById("memoryGame").insertAdjacentElement("beforeend", numInput)
        document.getElementById("memoryGame").insertAdjacentElement("beforeend", goBtn)
        document.getElementById("memoryGame").insertAdjacentElement("beforeend", errorMsg)
    }
}

const memoryGame = new MemoryGame()
memoryGame.initializeGame()